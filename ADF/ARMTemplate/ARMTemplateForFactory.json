{
    "$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "factoryName": {
            "type": "string",
            "metadata": "Data Factory name",
            "defaultValue": "adfpocarr"
        },
        "AzureDataLakeStorage1_accountKey": {
            "type": "secureString",
            "metadata": "Secure string for 'accountKey' of 'AzureDataLakeStorage1'"
        },
        "LS_AzureSQL_EU_connectionString": {
            "type": "secureString",
            "metadata": "Secure string for 'connectionString' of 'LS_AzureSQL_EU'",
            "defaultValue": "Integrated Security=False;Encrypt=True;Connection Timeout=30;Data Source=@{linkedService().ServerName};Initial Catalog=@{linkedService().DatabaseName}"
        },
        "LS_AZ_SQLDatabase_connectionString": {
            "type": "secureString",
            "metadata": "Secure string for 'connectionString' of 'LS_AZ_SQLDatabase'",
            "defaultValue": "Integrated Security=False;Encrypt=True;Connection Timeout=180;Data Source=flex-sqlserver-datadev.database.windows.net;Initial Catalog=flex-sqldb-datadev;User ID=sqladmin;ConnectRetryCount=6;ConnectRetryInterval=20"
        },
        "AzureDataLakeStorage1_properties_typeProperties_url": {
            "type": "string",
            "defaultValue": "https://adlsbicepmodule.dfs.core.windows.net/"
        },
        "LS_AZ_KeyVault_properties_typeProperties_baseUrl": {
            "type": "string",
            "defaultValue": "https://flex-securevault-datadev.vault.azure.net/"
        }
    },
    "variables": {
        "factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
    },
    "resources": [
        {
            "name": "[concat(parameters('factoryName'), '/DS_AZSQL_EU')]",
            "type": "Microsoft.DataFactory/factories/datasets",
            "apiVersion": "2018-06-01",
            "properties": {
                "linkedServiceName": {
                    "referenceName": "LS_AzureSQL_EU",
                    "type": "LinkedServiceReference",
                    "parameters": {
                        "ServerName": {
                            "value": "@dataset().ServerName",
                            "type": "Expression"
                        },
                        "DatabaseName": {
                            "value": "@dataset().DatabaseName",
                            "type": "Expression"
                        },
                        "UserName": {
                            "value": "@dataset().UserName",
                            "type": "Expression"
                        },
                        "AKVSecretName": {
                            "value": "@dataset().AKVSecretName",
                            "type": "Expression"
                        }
                    }
                },
                "parameters": {
                    "TableName": {
                        "type": "string"
                    },
                    "SchemaName": {
                        "type": "string"
                    },
                    "ServerName": {
                        "type": "string"
                    },
                    "DatabaseName": {
                        "type": "string"
                    },
                    "UserName": {
                        "type": "string"
                    },
                    "AKVSecretName": {
                        "type": "string"
                    }
                },
                "annotations": [],
                "type": "AzureSqlTable",
                "schema": [],
                "typeProperties": {
                    "schema": {
                        "value": "@dataset().SchemaName",
                        "type": "Expression"
                    },
                    "table": {
                        "value": "@dataset().TableName",
                        "type": "Expression"
                    }
                }
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/linkedServices/LS_AzureSQL_EU')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/DS_Logging_AzSQL')]",
            "type": "Microsoft.DataFactory/factories/datasets",
            "apiVersion": "2018-06-01",
            "properties": {
                "linkedServiceName": {
                    "referenceName": "LS_AZ_SQLDatabase",
                    "type": "LinkedServiceReference"
                },
                "annotations": [],
                "type": "AzureSqlTable",
                "schema": [],
                "typeProperties": {
                    "schema": "common",
                    "table": "BatchDetails"
                }
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/linkedServices/LS_AZ_SQLDatabase')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/AzureDataLakeStorage1')]",
            "type": "Microsoft.DataFactory/factories/linkedServices",
            "apiVersion": "2018-06-01",
            "properties": {
                "annotations": [],
                "type": "AzureBlobFS",
                "typeProperties": {
                    "url": "[parameters('AzureDataLakeStorage1_properties_typeProperties_url')]",
                    "accountKey": {
                        "type": "SecureString",
                        "value": "[parameters('AzureDataLakeStorage1_accountKey')]"
                    }
                }
            },
            "dependsOn": []
        },
        {
            "name": "[concat(parameters('factoryName'), '/LS_AZ_KeyVault')]",
            "type": "Microsoft.DataFactory/factories/linkedServices",
            "apiVersion": "2018-06-01",
            "properties": {
                "annotations": [],
                "type": "AzureKeyVault",
                "typeProperties": {
                    "baseUrl": "[parameters('LS_AZ_KeyVault_properties_typeProperties_baseUrl')]"
                }
            },
            "dependsOn": []
        },
        {
            "name": "[concat(parameters('factoryName'), '/LS_AzureSQL_EU')]",
            "type": "Microsoft.DataFactory/factories/linkedServices",
            "apiVersion": "2018-06-01",
            "properties": {
                "parameters": {
                    "ServerName": {
                        "type": "string"
                    },
                    "DatabaseName": {
                        "type": "string"
                    },
                    "UserName": {
                        "type": "string"
                    },
                    "AKVSecretName": {
                        "type": "string"
                    }
                },
                "annotations": [],
                "type": "AzureSqlDatabase",
                "typeProperties": {
                    "connectionString": "[parameters('LS_AzureSQL_EU_connectionString')]"
                }
            },
            "dependsOn": []
        },
        {
            "name": "[concat(parameters('factoryName'), '/LS_AZ_SQLDatabase')]",
            "type": "Microsoft.DataFactory/factories/linkedServices",
            "apiVersion": "2018-06-01",
            "properties": {
                "annotations": [],
                "type": "AzureSqlDatabase",
                "typeProperties": {
                    "connectionString": "[parameters('LS_AZ_SQLDatabase_connectionString')]",
                    "password": {
                        "type": "AzureKeyVaultSecret",
                        "store": {
                            "referenceName": "LS_AZ_KeyVault",
                            "type": "LinkedServiceReference"
                        },
                        "secretName": "AzSQLPassword"
                    }
                }
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/linkedServices/LS_AZ_KeyVault')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/pipeline1')]",
            "type": "Microsoft.DataFactory/factories/pipelines",
            "apiVersion": "2018-06-01",
            "properties": {
                "activities": [
                    {
                        "name": "Set variable1",
                        "type": "SetVariable",
                        "dependsOn": [],
                        "policy": {
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "variableName": "test",
                            "value": [
                                "anu"
                            ]
                        }
                    },
                    {
                        "name": "If Condition1",
                        "type": "IfCondition",
                        "dependsOn": [],
                        "userProperties": [],
                        "typeProperties": {
                            "expression": {
                                "value": "1=1",
                                "type": "Expression"
                            }
                        }
                    }
                ],
                "policy": {
                    "elapsedTimeMetric": {}
                },
                "parameters": {
                    "testcheckparam": {
                        "type": "int"
                    }
                },
                "variables": {
                    "test": {
                        "type": "Array"
                    }
                },
                "annotations": [],
                "lastPublishTime": "2023-01-04T10:38:57Z"
            },
            "dependsOn": []
        },
        {
            "name": "[concat(parameters('factoryName'), '/PL_Mart_Child')]",
            "type": "Microsoft.DataFactory/factories/pipelines",
            "apiVersion": "2018-06-01",
            "properties": {
                "activities": [
                    {
                        "name": "Stored Procedure Execution",
                        "type": "SqlServerStoredProcedure",
                        "dependsOn": [],
                        "policy": {
                            "timeout": "0.12:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "storedProcedureName": {
                                "value": "@pipeline().parameters.P_StoredprocedureName",
                                "type": "Expression"
                            }
                        },
                        "linkedServiceName": {
                            "referenceName": "LS_AZ_SQLDatabase",
                            "type": "LinkedServiceReference"
                        }
                    }
                ],
                "policy": {
                    "elapsedTimeMetric": {}
                },
                "parameters": {
                    "P_BatchId": {
                        "type": "string"
                    },
                    "P_MartName": {
                        "type": "string"
                    },
                    "P_StoredprocedureName": {
                        "type": "string"
                    }
                },
                "folder": {
                    "name": "EU/Mart"
                },
                "annotations": [],
                "lastPublishTime": "2023-12-12T16:25:49Z"
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/linkedServices/LS_AZ_SQLDatabase')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/PL_Mart_Level_Refresh')]",
            "type": "Microsoft.DataFactory/factories/pipelines",
            "apiVersion": "2018-06-01",
            "properties": {
                "activities": [
                    {
                        "name": "LKP_GetAllTables_In_Current_Level",
                        "type": "Lookup",
                        "dependsOn": [],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "source": {
                                "type": "AzureSqlSource",
                                "sqlReaderQuery": {
                                    "value": "SELECT *\nFROM [Common].[EU_JobSequence]\nWHERE martName = '@{pipeline().parameters.P_Mart_Name}'\nand levelno = @{pipeline().parameters.P_Level_No}",
                                    "type": "Expression"
                                },
                                "queryTimeout": "02:00:00",
                                "partitionOption": "None"
                            },
                            "dataset": {
                                "referenceName": "DS_Logging_AzSQL",
                                "type": "DatasetReference",
                                "parameters": {}
                            },
                            "firstRowOnly": false
                        }
                    },
                    {
                        "name": "ForEach_Wrap",
                        "type": "ForEach",
                        "dependsOn": [
                            {
                                "activity": "LKP_GetAllTables_In_Current_Level",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "items": {
                                "value": "@activity('LKP_GetAllTables_In_Current_Level').output.value",
                                "type": "Expression"
                            },
                            "isSequential": false,
                            "activities": [
                                {
                                    "name": "PL_Mart_Child",
                                    "type": "ExecutePipeline",
                                    "dependsOn": [],
                                    "userProperties": [],
                                    "typeProperties": {
                                        "pipeline": {
                                            "referenceName": "PL_Mart_Child",
                                            "type": "PipelineReference"
                                        },
                                        "waitOnCompletion": true,
                                        "parameters": {
                                            "P_BatchId": {
                                                "value": "@pipeline().parameters.P_Batch_Id",
                                                "type": "Expression"
                                            },
                                            "P_MartName": {
                                                "value": "@pipeline().parameters.P_Mart_name",
                                                "type": "Expression"
                                            },
                                            "P_StoredprocedureName": {
                                                "value": "@item().StoredProcedure",
                                                "type": "Expression"
                                            }
                                        }
                                    }
                                },
                                {
                                    "name": "Set variable on success",
                                    "type": "SetVariable",
                                    "dependsOn": [
                                        {
                                            "activity": "PL_Mart_Child",
                                            "dependencyConditions": [
                                                "Succeeded"
                                            ]
                                        }
                                    ],
                                    "policy": {
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "variableName": "V_Dummy",
                                        "value": "123"
                                    }
                                }
                            ]
                        }
                    }
                ],
                "policy": {
                    "elapsedTimeMetric": {}
                },
                "parameters": {
                    "P_Batch_Id": {
                        "type": "string"
                    },
                    "P_Level_No": {
                        "type": "string"
                    },
                    "P_Mart_name": {
                        "type": "string"
                    },
                    "P_Run_Type": {
                        "type": "string"
                    },
                    "P_Load_Type": {
                        "type": "string"
                    }
                },
                "variables": {
                    "V_Dummy": {
                        "type": "String"
                    }
                },
                "folder": {
                    "name": "EU/Mart"
                },
                "annotations": [],
                "lastPublishTime": "2023-12-12T16:28:51Z"
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/datasets/DS_Logging_AzSQL')]",
                "[concat(variables('factoryId'), '/pipelines/PL_Mart_Child')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/PL_Master_DataMart_Refresh')]",
            "type": "Microsoft.DataFactory/factories/pipelines",
            "apiVersion": "2018-06-01",
            "properties": {
                "activities": [
                    {
                        "name": "LKP_Create_BatchID",
                        "type": "Lookup",
                        "dependsOn": [],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "source": {
                                "type": "AzureSqlSource",
                                "sqlReaderQuery": {
                                    "value": "DECLARE @current_datetime datetime = getdate()\nINSERT INTO [common].[EU_BatchDetails]  (CreatedDateTime,Comments)\nSELECT @current_datetime,'Mart Refresh Started- @{toUpper(pipeline().parameters.P_MartName)}'\n\nSELECT BatchID \nFROM [common].[EU_BatchDetails] \nwhere CreatedDateTime = @current_datetime",
                                    "type": "Expression"
                                },
                                "queryTimeout": "02:00:00",
                                "partitionOption": "None"
                            },
                            "dataset": {
                                "referenceName": "DS_Logging_AzSQL",
                                "type": "DatasetReference",
                                "parameters": {}
                            }
                        }
                    },
                    {
                        "name": "LKP_TotalLevels",
                        "type": "Lookup",
                        "dependsOn": [
                            {
                                "activity": "SP_SetJobsequence",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "source": {
                                "type": "AzureSqlSource",
                                "sqlReaderQuery": {
                                    "value": "SELECT MAX(levelno) as TotalLevels\nFROM [common].[EU_JobSequence]\nWHERE martName = '@{pipeline().parameters.P_MartName}'",
                                    "type": "Expression"
                                },
                                "queryTimeout": "02:00:00",
                                "partitionOption": "None"
                            },
                            "dataset": {
                                "referenceName": "DS_Logging_AzSQL",
                                "type": "DatasetReference",
                                "parameters": {}
                            }
                        }
                    },
                    {
                        "name": "SET_TotalLevels",
                        "type": "SetVariable",
                        "dependsOn": [
                            {
                                "activity": "LKP_TotalLevels",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "variableName": "V_Total_Levels",
                            "value": {
                                "value": "@string(activity('LKP_TotalLevels').output.firstRow.TotalLevels)",
                                "type": "Expression"
                            }
                        }
                    },
                    {
                        "name": "Until_All_levels",
                        "type": "Until",
                        "dependsOn": [
                            {
                                "activity": "SET_TotalLevels",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "expression": {
                                "value": "@greater(int(variables('V_Current_Level')),int(variables('V_Total_Levels')))",
                                "type": "Expression"
                            },
                            "activities": [
                                {
                                    "name": "Set temp holder",
                                    "type": "SetVariable",
                                    "dependsOn": [],
                                    "policy": {
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "variableName": "V_Tmp_Level_Holder",
                                        "value": {
                                            "value": "@variables('V_Current_Level')",
                                            "type": "Expression"
                                        }
                                    }
                                },
                                {
                                    "name": "PL_Mart_Level_Refresh",
                                    "type": "ExecutePipeline",
                                    "dependsOn": [
                                        {
                                            "activity": "Set temp holder",
                                            "dependencyConditions": [
                                                "Succeeded"
                                            ]
                                        }
                                    ],
                                    "userProperties": [],
                                    "typeProperties": {
                                        "pipeline": {
                                            "referenceName": "PL_Mart_Level_Refresh",
                                            "type": "PipelineReference"
                                        },
                                        "waitOnCompletion": true,
                                        "parameters": {
                                            "P_Batch_Id": {
                                                "value": "@activity('LKP_Create_BatchID').output.firstRow.BatchID\n",
                                                "type": "Expression"
                                            },
                                            "P_Level_No": {
                                                "value": "@variables('V_Current_Level')",
                                                "type": "Expression"
                                            },
                                            "P_Mart_name": {
                                                "value": "@pipeline().parameters.P_MartName",
                                                "type": "Expression"
                                            },
                                            "P_Run_Type": {
                                                "value": "@pipeline().parameters.P_RunType",
                                                "type": "Expression"
                                            },
                                            "P_Load_Type": {
                                                "value": "@pipeline().parameters.P_LoadType",
                                                "type": "Expression"
                                            }
                                        }
                                    }
                                },
                                {
                                    "name": "increment current level",
                                    "type": "SetVariable",
                                    "dependsOn": [
                                        {
                                            "activity": "PL_Mart_Level_Refresh",
                                            "dependencyConditions": [
                                                "Succeeded"
                                            ]
                                        }
                                    ],
                                    "policy": {
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "variableName": "V_Current_Level",
                                        "value": {
                                            "value": "@string(add(int(variables('V_Tmp_Level_Holder')),1))",
                                            "type": "Expression"
                                        }
                                    }
                                },
                                {
                                    "name": "set Total_Levels plus 1",
                                    "type": "SetVariable",
                                    "dependsOn": [
                                        {
                                            "activity": "PL_Mart_Level_Refresh",
                                            "dependencyConditions": [
                                                "Failed"
                                            ]
                                        }
                                    ],
                                    "policy": {
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "variableName": "V_Current_Level",
                                        "value": {
                                            "value": "@string(add(int(variables('V_Total_Levels')),1))",
                                            "type": "Expression"
                                        }
                                    }
                                }
                            ],
                            "timeout": "7.00:00:00"
                        }
                    },
                    {
                        "name": "SP_SetJobsequence",
                        "type": "SqlServerStoredProcedure",
                        "dependsOn": [
                            {
                                "activity": "LKP_Create_BatchID",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "0.12:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "storedProcedureName": "[[common].[USP_EU_JobSequence_INS]",
                            "storedProcedureParameters": {
                                "MartName": {
                                    "value": {
                                        "value": "@pipeline().parameters.P_MartName",
                                        "type": "Expression"
                                    },
                                    "type": "String"
                                },
                                "where_cond": {
                                    "value": {
                                        "value": "@pipeline().parameters.P_WhereCondition",
                                        "type": "Expression"
                                    },
                                    "type": "String"
                                }
                            }
                        },
                        "linkedServiceName": {
                            "referenceName": "LS_AZ_SQLDatabase",
                            "type": "LinkedServiceReference"
                        }
                    },
                    {
                        "name": "LKP Jobsequence",
                        "type": "Lookup",
                        "dependsOn": [
                            {
                                "activity": "Until_All_levels",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "0.12:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "source": {
                                "type": "AzureSqlSource",
                                "sqlReaderQuery": {
                                    "value": "Select ProcedureName,'@{pipeline().parameters.P_LoadType}' as LoadType from common.Eu_jobsequence",
                                    "type": "Expression"
                                },
                                "queryTimeout": "02:00:00",
                                "partitionOption": "None"
                            },
                            "dataset": {
                                "referenceName": "DS_Logging_AzSQL",
                                "type": "DatasetReference",
                                "parameters": {}
                            },
                            "firstRowOnly": false
                        }
                    },
                    {
                        "name": "Exec USP_EU_Main_PopulateMart",
                        "type": "SqlServerStoredProcedure",
                        "dependsOn": [
                            {
                                "activity": "LKP Jobsequence",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "0.12:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "storedProcedureName": "[[common].[USP_EU_Main_PopulateMart]",
                            "storedProcedureParameters": {
                                "json_value": {
                                    "value": {
                                        "value": "@string(activity('LKP Jobsequence').output)",
                                        "type": "Expression"
                                    },
                                    "type": "String"
                                }
                            }
                        },
                        "linkedServiceName": {
                            "referenceName": "LS_AZ_SQLDatabase",
                            "type": "LinkedServiceReference"
                        }
                    }
                ],
                "policy": {
                    "elapsedTimeMetric": {}
                },
                "parameters": {
                    "P_MartName": {
                        "type": "string",
                        "defaultValue": "mart"
                    },
                    "P_RunType": {
                        "type": "string",
                        "defaultValue": "debug"
                    },
                    "P_WhereCondition": {
                        "type": "string",
                        "defaultValue": "id = 3"
                    },
                    "P_LoadType": {
                        "type": "string",
                        "defaultValue": "ftl"
                    }
                },
                "variables": {
                    "V_Current_Level": {
                        "type": "String",
                        "defaultValue": "1"
                    },
                    "V_Total_Levels": {
                        "type": "String"
                    },
                    "V_Tmp_Level_Holder": {
                        "type": "String"
                    }
                },
                "folder": {
                    "name": "EU/Mart"
                },
                "annotations": [],
                "lastPublishTime": "2023-12-12T16:25:50Z"
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/datasets/DS_Logging_AzSQL')]",
                "[concat(variables('factoryId'), '/linkedServices/LS_AZ_SQLDatabase')]",
                "[concat(variables('factoryId'), '/pipelines/PL_Mart_Level_Refresh')]"
            ]
        }
    ]
}